{"version":3,"sources":["redux/actions/actionTypes.js","api.js","redux/actions/app.js","components/error-boundary/error-boundary.js","components/topics/topics.js","util/util.js","components/posts/posts.js","components/app/App.js","redux/reducers/app.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["FETCH_TOPICS","Object","freeze","INITIAL","SUCCESS","FAILURE","FETCH_POSTS","APP","SET_ERROR","SET_SHOWING_POSTS","SET_CURRENT_TOPIC","getJSON","url","a","fetch","res","json","fetchPosts","topic","fetchPostSuccess","data","children","map","child","type","fetchTopicSuccess","topics","setShowPosts","isShowingPosts","getPosts","dispatch","err","ErrorBoundary","props","state","hasError","error","errorInfo","this","className","icon","IconNames","ERROR","intent","Intent","DANGER","React","Component","Topic","display_name_prefixed","title","display_name","icon_img","style","backgroundImage","renderIcon","banner","banner_background_image","banner_background_color","header_img","backgroundSize","backgroundColor","renderBanner","onClick","Topics","topicElements","key","name","uppercase","str","length","slice","toUpperCase","Post","created","author","ups","timeAgo","date_1","date_2","finalLabel","maxToLabel","diff","Math","abs","lessThanMax","entry","i","filter","max","finalNum","shift","label","floor","formatDateDiff","Date","thumbnail","RegExp","test","renderThumbnail","href","target","THUMBS_UP","toLocaleString","Posts","posts","window","scrollTo","postElements","post","handleClick","split","join","trim","CHEVRON_LEFT","connect","appState","app","currentTopic","useEffect","has","wrapper","then","get","INITIAL_STATE","Map","inProgress","updatePosts","oldPosts","newPosts","cloneDeep","set","combineReducers","prevState","action","middleware","applyMiddleware","logger","thunk","createStore","finalReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.1fcbf87f.chunk.js","sourcesContent":["export const FETCH_TOPICS = Object.freeze({\r\n    INITIAL: \"FETCH_TOPICS_INITIAL\",\r\n    SUCCESS: \"FETCH_TOPICS_SUCCESS\",\r\n    FAILURE: \"FETCH_TOPICS_FAILURE\"\r\n});\r\n\r\nexport const FETCH_POSTS = Object.freeze({\r\n    INITIAL: \"FETCH_POSTS_INITIAL\",\r\n    SUCCESS: \"FETCH_POSTS_SUCCESS\",\r\n    FAILURE: \"FETCH_POSTS_FAILURE\"\r\n});\r\n\r\nexport const APP = Object.freeze({\r\n   SET_ERROR: \"APP_SET_ERROR\",\r\n   SET_SHOWING_POSTS: \"APP_SET_SHOWING_POSTS\",\r\n   SET_CURRENT_TOPIC: \"APP_SET_CURRENT_TOPIC\"\r\n});","/**\r\n * @param url - the url to fetch\r\n * @returns {Promise<any>}\r\n * @desc A utility function for fetching the JSON\r\n * response from an endpoint.\r\n */\r\nasync function getJSON(url) {\r\n    try {\r\n        const res = await fetch(url);\r\n        return await res.json();\r\n    } catch (e) {\r\n        throw e;\r\n    }\r\n}\r\n\r\nexport function fetchTopics() {\r\n    const url = \"https://www.reddit.com/subreddits/popular.json?raw_json=1\";\r\n    return getJSON(url);\r\n}\r\n\r\nexport function fetchPosts(topic) {\r\n    const url = `https://www.reddit.com/r/${topic}/hot.json`;\r\n    return getJSON(url);\r\n}","import {FETCH_POSTS, FETCH_TOPICS, APP} from \"./actionTypes\";\r\nimport {fetchPosts, fetchTopics} from \"../../api\";\r\n\r\nfunction fetchPostInitial() {\r\n    return {\r\n        type: FETCH_POSTS.INITIAL\r\n    };\r\n}\r\n\r\nfunction fetchPostSuccess(topic,data) {\r\n    data = data.data.children.map(child => child.data);\r\n    return {\r\n        type: FETCH_POSTS.SUCCESS,\r\n        topic,\r\n        data\r\n    };\r\n}\r\n\r\nfunction fetchPostFailure(err) {\r\n    return {\r\n        type: FETCH_POSTS.FAILURE,\r\n        err\r\n    };\r\n}\r\n\r\nfunction fetchTopicInitial() {\r\n    return {\r\n        type: FETCH_TOPICS.INITIAL\r\n    };\r\n}\r\n\r\nfunction fetchTopicSuccess(data) {\r\n    const topics = data.data.children.map(child => child.data);\r\n    return {\r\n        type: FETCH_TOPICS.SUCCESS,\r\n        topics\r\n    };\r\n}\r\n\r\nfunction fetchTopicFailure(err) {\r\n    return {\r\n        type: FETCH_TOPICS.FAILURE,\r\n        err\r\n    };\r\n}\r\n\r\nexport function setError(err) {\r\n    return {\r\n        type: APP.SET_ERROR,\r\n        err\r\n    }\r\n}\r\n\r\nexport function setShowPosts(isShowingPosts) {\r\n    return {\r\n        type: APP.SET_SHOWING_POSTS,\r\n        isShowingPosts\r\n    }\r\n}\r\n\r\nexport function setCurrentTopic(topic) {\r\n    return {\r\n        type: APP.SET_CURRENT_TOPIC,\r\n        topic\r\n    }\r\n}\r\n\r\nexport function getTopics() {\r\n    return async (dispatch) => {\r\n        dispatch(fetchTopicInitial());\r\n        try {\r\n            const res = await fetchTopics();\r\n            dispatch(fetchTopicSuccess(res));\r\n        } catch (e) {\r\n            dispatch(fetchTopicFailure(e));\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * @param topic\r\n * @returns {function(...[*]=)}\r\n */\r\nexport function getPosts(topic) {\r\n    return async (dispatch) => {\r\n        dispatch(fetchPostInitial());\r\n        try {\r\n            const data = await fetchPosts(topic);\r\n            dispatch(fetchPostSuccess(topic, data));\r\n        } catch (e) {\r\n            dispatch(fetchPostFailure(e));\r\n        }\r\n    };\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {setError} from \"../../redux/actions/app\";\r\nimport { Icon, Intent} from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\nimport './error-boundary.scss';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {hasError: false};\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.props.dispatch(setError({error,errorInfo}));\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError || this.props.hasError) {\r\n            return (\r\n                <main className={\"error-boundary\"}>\r\n                    <div className={\"message\"}>\r\n                        <Icon icon={IconNames.ERROR} intent={Intent.DANGER}/>\r\n                        <h1>Sorry, something went wrong.</h1>\r\n                        <h2>Please try again later.</h2>\r\n                    </div>\r\n                </main>\r\n            );\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nErrorBoundary.propTypes = {\r\n    dispatch: PropTypes.func,\r\n    hasError: PropTypes.bool\r\n};\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport {setCurrentTopic, setShowPosts} from \"../../redux/actions/app\";\r\nimport './topics.scss';\r\n\r\n/**\r\n * @param topics\r\n * @param dispatch\r\n * @desc A non-connected component for displaying a list of topics.\r\n */\r\nfunction Topics({topics, dispatch}) {\r\n\r\n    // COMPONENTS ------------------------------------------------------------------------------------------------------\r\n\r\n    const topicElements = topics.map(data => <Topic data={data} key={data.name} dispatch={dispatch}/>);\r\n    return (\r\n        <>\r\n            <h1>Popular Topics</h1>\r\n            <div className={\"topics\"}>\r\n              {topicElements}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n/**\r\n * @param data\r\n * @param dispatch\r\n * @desc A helper component for displaying a single topic.\r\n *  Features:\r\n *  - renders a banner image if it exists\r\n *  - displays title\r\n *  - displays author icon and prefixed \"r/<name>\"\r\n */\r\nfunction Topic({data, dispatch}) {\r\n\r\n    // GLOBAL VARIABLES ------------------------------------------------------------------------------------------------\r\n\r\n    const {display_name_prefixed, title, display_name} = data;\r\n\r\n    // HANDLERS --------------------------------------------------------------------------------------------------------\r\n\r\n    const handleClick = () => {\r\n        dispatch(setCurrentTopic(display_name));\r\n        dispatch(setShowPosts(true));\r\n    };\r\n\r\n    // COMPONENTS ------------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * @param data\r\n     * @desc If icon image exists, display it,\r\n     * else, return null.\r\n     */\r\n    function renderIcon(data) {\r\n        const {icon_img} = data;\r\n        if (icon_img) {\r\n            const style = {\r\n                backgroundImage: `url(${icon_img})`\r\n            };\r\n\r\n            return (<div className={\"topic-icon\"} style={style}/>);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @param data\r\n     * @desc If the header or banner image exists,\r\n     * display it, else return null.\r\n     */\r\n    function renderBanner(data) {\r\n        const {banner_background_image, banner_background_color, header_img} = data;\r\n        const style = {};\r\n        if (header_img) { // select an image to display\r\n            style.backgroundImage = `url(${header_img})`;\r\n            style.backgroundSize = \"contain\";\r\n        } else if (banner_background_image) {\r\n            style.backgroundImage = `url(${banner_background_image})`;\r\n            style.backgroundSize = \"cover\";\r\n        }\r\n        if (banner_background_color) { // update bg-color if it exists\r\n            style.backgroundColor = banner_background_color;\r\n        }\r\n        return (<div className={\"banner\"} style={style}/>);\r\n    }\r\n\r\n    const icon = renderIcon(data);\r\n    const banner = renderBanner(data);\r\n\r\n    return (\r\n        <div className={\"topic\"} onClick={handleClick}>\r\n            {banner}\r\n            <div className={\"description\"}>\r\n                <div className={\"title\"}>{title}</div>\r\n                <div className={\"author\"}>\r\n                    {icon}\r\n                    <div className={\"display-name-prefixed\"}>{display_name_prefixed}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Topics;","/**\r\n * @param {number} date_1 - a date in ms since January 1st, 1970\r\n * @param {number} date_2 - a date in ms since January 1st, 1970\r\n * Calculates the difference between two dates and returns\r\n * a string of the highest whole integer difference in seconds,\r\n * minutes, hours, days, weeks, months, or years.\r\n */\r\nexport const formatDateDiff = (date_1, date_2) => {\r\n    const maxToLabel = [\r\n        [60, 'second'],\r\n        [3600, 'minute'],\r\n        [86400, 'hour'],\r\n        [604800, 'day'],\r\n        [2592000, 'week'],\r\n        [31557600, 'month']\r\n    ];\r\n    const diff = (Math.abs(date_1 - date_2)/1000) + 1; // ms to seconds\r\n    const lessThanMax = maxToLabel.map((entry, i) => {\r\n        return {entry, i}\r\n    }).filter(({entry: [max, label]}) => diff < max);\r\n\r\n    let finalNum = diff;\r\n    let finalLabel;\r\n    if (lessThanMax.length) {\r\n        const {entry: [max, label], i} = lessThanMax.shift();\r\n        finalLabel = label;\r\n        if (i > 0) finalNum = diff/maxToLabel[i-1][0];\r\n    } else {\r\n        finalNum = diff/31557600;\r\n        finalLabel = 'year';\r\n    }\r\n    finalNum = Math.floor(finalNum);\r\n    return `${finalNum} ${finalLabel}${finalNum > 1 ? 's' : ''}`\r\n};\r\n\r\nfunction uppercase(str) {\r\n    if (str.length) {\r\n        return str.slice(0,1).toUpperCase() + str.slice(1);\r\n    }\r\n    return str;\r\n}\r\n\r\nexport function prettifyTitle(str) {\r\n    return str.split(\"_\").map(uppercase).join(\" \").trim();\r\n}","import React from 'react';\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport { IconNames } from \"@blueprintjs/icons\";\r\nimport {setShowPosts} from \"../../redux/actions/app\";\r\nimport {formatDateDiff, prettifyTitle} from \"../../util/util\";\r\nimport './posts.scss';\r\n\r\n/**\r\n * @param posts\r\n * @param topic\r\n * @param dispatch\r\n * @desc A wrapper component for a list of posts.\r\n */\r\nfunction Posts({posts, topic, dispatch}) {\r\n    window.scrollTo(0,0);\r\n\r\n    // GLOBAL VARIABLES ------------------------------------------------------------------------------------------------\r\n\r\n    const postElements = posts.map(post => <Post data={post}/>);\r\n\r\n    // HANDLERS --------------------------------------------------------------------------------------------------------\r\n\r\n    const handleClick = async () => {\r\n      await dispatch(setShowPosts(false));\r\n      window.scrollTo(0,0);\r\n    };\r\n\r\n    // COMPONENTS ------------------------------------------------------------------------------------------------------\r\n\r\n    return (\r\n        <>\r\n            <h1>{prettifyTitle(topic)}</h1>\r\n            <div className={'posts'}>\r\n                <nav>\r\n                    <span className={`back-icon`} onClick={handleClick}>\r\n                       <Icon icon={IconNames.CHEVRON_LEFT}/>\r\n                    </span>\r\n                </nav>\r\n                {postElements}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n/**\r\n * @param data\r\n * @desc A helper component for displaying a single post.\r\n * Features:\r\n *  - displays thumbnail if it exists\r\n *  - displays title, author, and time since post was created\r\n *  - displays amount of \"ups\"\r\n */\r\nfunction Post({data}) {\r\n\r\n    // GLOBAL VARIABLES ------------------------------------------------------------------------------------------------\r\n\r\n    const {title, url, created, author, ups} = data;\r\n    const timeAgo = formatDateDiff(created*1000, +(new Date()));\r\n\r\n    // COMPONENTS ------------------------------------------------------------------------------------------------------\r\n\r\n    function renderThumbnail(data) {\r\n        const {thumbnail} = data;\r\n        if (thumbnail && RegExp('http*', 'gi').test(thumbnail)) {\r\n            return (<div className={'thumbnail'} style={{backgroundImage: `url(${thumbnail})`}}/>);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    const thumbnail = renderThumbnail(data);\r\n    return (\r\n        <a href={url} target={'_blank'}>\r\n            <div className={\"post\"}>\r\n                {thumbnail}\r\n                <div className={\"text\"}>\r\n                    <h1 className={\"title\"}>{title}</h1>\r\n                    <div className={\"user-metadata\"}>\r\n                        {`Posted by ${author} ${timeAgo} ago`}\r\n                    </div>\r\n                    <div className={\"ups\"}>\r\n                        <Icon icon={IconNames.THUMBS_UP}/>\r\n                        <div className={\"amount\"}>\r\n                            {ups.toLocaleString() || 0}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </a>\r\n    );\r\n}\r\n\r\nexport default Posts;","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {getTopics, getPosts} from \"../../redux/actions/app\";\nimport ErrorBoundary from \"../error-boundary/error-boundary\";\nimport Topics from \"../topics/topics\";\nimport Posts from \"../posts/posts\";\nimport './App.scss';\n\n/**\n * @param appState\n * @param dispatch\n * @desc The top level app component.\n *  Main responsibilities:\n *  - displays posts or topics\n *  - displays error page\n */\nfunction App({appState, dispatch}) {\n\n  // GLOBAL VARIABLES --------------------------------------------------------------------------------------------------\n\n  const {hasError, topics, currentTopic, isShowingPosts, posts} = appState;\n\n  // SIDE EFFECTS ------------------------------------------------------------------------------------------------------\n\n  /**\n   * @desc Dispatch an action to the store\n   * to obtain the topics once.\n   */\n  useEffect(() => {\n    dispatch(getTopics());\n  }, []);\n\n  /**\n   * @desc Whenever current topic changes\n   * and the topic is not in the posts map,\n   * dispatch a get post action.\n   */\n  useEffect(() => {\n    const wrapper = async() => {\n      if (!posts.has(currentTopic)) {\n        await dispatch(getPosts(currentTopic));\n      }\n      window.scrollTo(0,0);\n    };\n    wrapper().then();\n  }, [currentTopic]);\n\n  // COMPONENTS --------------------------------------------------------------------------------------------------------\n\n  const renderTopicsOrPosts = () => {\n    if (isShowingPosts && currentTopic && posts.has(currentTopic)) {\n      return (<Posts posts={posts.get(currentTopic)} topic={currentTopic} dispatch={dispatch}/>);\n    }\n    return (<Topics topics={topics} dispatch={dispatch}/>);\n  };\n\n  return (\n    <ErrorBoundary hasError={hasError} dispatch={dispatch}>\n      <main className={\"app\"}>\n        {renderTopicsOrPosts()}\n      </main>\n    </ErrorBoundary>\n  );\n}\n\nconst mapStateToProps = state => ({\n  appState: state.app\n});\n\nexport default connect(mapStateToProps)(App);\n","import {FETCH_POSTS, FETCH_TOPICS, APP} from \"../actions/actionTypes\";\r\nimport {cloneDeep} from 'lodash';\r\n\r\nconst INITIAL_STATE = {\r\n    topics: [],\r\n    posts: new Map(),\r\n    isShowingPosts: false,\r\n    currentTopic: null,\r\n    inProgress: false,\r\n    error: null,\r\n    hasError: false\r\n};\r\n\r\nexport default (prevState = INITIAL_STATE, action) => {\r\n    let {posts} = prevState;\r\n    switch(action.type) {\r\n        case FETCH_POSTS.INITIAL:\r\n        case FETCH_TOPICS.INITIAL:\r\n            return {\r\n                ...prevState,\r\n                error: null,\r\n                inProgress: true,\r\n                hasError: false\r\n            };\r\n        case FETCH_POSTS.SUCCESS:\r\n            return {\r\n                ...prevState,\r\n                inProgress: false,\r\n                posts: updatePosts(posts, action.topic, action.data)\r\n            };\r\n        case FETCH_TOPICS.SUCCESS:\r\n            return {\r\n                ...prevState,\r\n                inProgress: false,\r\n                topics: action.topics\r\n            };\r\n        case FETCH_POSTS.FAILURE:\r\n        case FETCH_TOPICS.FAILURE:\r\n            return {\r\n                ...prevState,\r\n                inProgress: false,\r\n                error: action.err,\r\n                hasError: true\r\n            };\r\n        case APP.SET_ERROR:\r\n            return {\r\n                ...prevState,\r\n                hasError: true,\r\n                error: action.err\r\n            };\r\n        case APP.SET_SHOWING_POSTS:\r\n            return {\r\n                ...prevState,\r\n                isShowingPosts: action.isShowingPosts\r\n            };\r\n        case APP.SET_CURRENT_TOPIC:\r\n            return {\r\n                ...prevState,\r\n                currentTopic: action.topic\r\n            };\r\n        default:\r\n            return prevState;\r\n    }\r\n}\r\n\r\nfunction updatePosts(oldPosts,topic,data) {\r\n    const newPosts = cloneDeep(oldPosts);\r\n    newPosts.set(topic,data);\r\n    return newPosts;\r\n}","import {combineReducers} from \"redux\";\r\nimport app from \"./app\";\r\n\r\nexport default combineReducers({app});","import {createStore, applyMiddleware} from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from \"redux-thunk\";\r\nimport finalReducer from './reducers/index';\r\n\r\n// todo: remove logger in production\r\nconst middleware = applyMiddleware(logger,thunk);\r\n\r\nexport default createStore(finalReducer, middleware);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from 'react-redux';\nimport App from './components/app/App';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n"],"sourceRoot":""}